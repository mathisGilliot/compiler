	TSTO #11
	BOV stack_overflow_error
	ADDSP #7
; start main program
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Code de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0	; Héritage de la méthode de Object
	STORE R0, 4(GB)
	LOAD code.A.getX, R0
	STORE R0, 5(GB)
	LOAD code.A.setX, R0
	STORE R0, 6(GB)
; Main program
; Variables declarations
; Déclaration a
	NEW #2, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 7(GB)
; Beginning of main instructions:
	ADDSP #2
	LOAD 7(GB), R3
	STORE R3, 0(SP)
	LOAD #1, R4
	STORE R4, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ deferencement_null
	LOAD 0(R3), R3
	BSR 3(R3)
	SUBSP #2
	LOAD R0, R2
; Print
	WSTR "a.getX() = "
; Print
	ADDSP #1
	LOAD 7(GB), R4
	STORE R4, 0(SP)
	LOAD 0(SP), R4
	CMP #null, R4
	BEQ deferencement_null
	LOAD 0(R4), R4
	BSR 2(R4)
	SUBSP #1
	LOAD R0, R3
	LOAD R3, R1
	WINT
	WNL
	HALT
overflow_error:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
deferencement_null:
	WSTR "Error: dereferencement de null"
	WNL
	ERROR
tas_plein:
	WSTR "Error: tas plein"
	WNL
	ERROR
code.Object.equals:
	HALT
; Code des classes
; Initialisation des champs de A
init.A:
	LOAD -2(LB), R1
; Initialisation de x
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
; Code de la méthode getX
Code.A.getX:
; Sauvegarde des registres
	TSTO #1
	BOV stack_overflow_error
	ADDSP #0
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	LOAD R2, R0
fin.A.getX:
; Restauration des registres
	POP R2
	RTS
; Code de la méthode setX
Code.A.setX:
; Sauvegarde des registres
	TSTO #2
	BOV stack_overflow_error
	ADDSP #0
	PUSH R2
	PUSH R3
; Affectation
	LOAD -2(LB), R2
	CMP #null, R2
	BEQ deferencement_null
	LOAD -3(LB), R3
	STORE R3, 1(R2)
fin.A.setX:
; Restauration des registres
	POP R3
	POP R2
	RTS
; end main program
